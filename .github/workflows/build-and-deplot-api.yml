name: API CI`

on:
    workflow_dispatch:
    push:
        branches:
            - main
        paths:
            - "backend/homehub-api/**"
env:
    AZURE_WEBAPP_NAME: homehub-api
    AZURE_WEBAPP_PACKAGE_PATH: './backend/homehub-api/Homehub.Api/publish'
    DOTNET_VERSION: "9.x"
    WORKING_DIRECTORY: './backend/homehub-api'
    SOLUTION_PATH: 'Homehub.sln'
    API_PROJECT_PATH: 'Homehub.Api'
    PUBLISH_DIR: './Homehub.Api/publish'

jobs:
    build-and-test:
        name: Build and Test
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: ${{ env.WORKING_DIRECTORY }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                dotnet-version: ${{ env.DOTNET_VERSION }}

            - name: Restore
              run: dotnet restore ${{ env.SOLUTION_PATH }}

            - name: Build
              run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore

            # - name: Test
            #   run: dotnet test ${{ env.SOLUTION_PATH }} --configuration Release  --no-restore --no-build --verbosity normal

            - name: Publish
              run: dotnet publish ${{ env.API_PROJECT_PATH }} --configuration Release --no-restore --no-build --property:PublishDir=${{ env.PUBLISH_DIR }}

            - name: Upload Artifacts
              uses: actions/upload-artifact@v4
              with:
                name: webapp
                path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    
    apply-migrations:
        name: Apply Database Migrations
        needs: build-and-test
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: ${{ env.WORKING_DIRECTORY }}

        steps:
            - uses: actions/checkout@v4

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                dotnet-version: ${{ env.DOTNET_VERSION }}

            - name: Install EF Core CLI
              run: dotnet tool install --global dotnet-ef

            - name: Create migration bundle
              run: |
                dotnet ef migrations bundle --startup-project ${{ env.API_PROJECT_PATH }} --project ${{ env.API_PROJECT_PATH }} --context ApplicationDbContext --output app-bundle.exe
                dotnet ef migrations bundle --startup-project ${{ env.API_PROJECT_PATH }} --project ${{ env.API_PROJECT_PATH }} --context ApplicationIdentityDbContext --output identity-bundle.exe

            - name: Apply app migrations
              run: ./app-bundle.exe --connection "${{ secrets.DATABASE_CONNECTION_STRING }}"

            - name: Apply identity migrations
              run: ./identity-bundle.exe --connection "${{ secrets.DATABASE_CONNECTION_STRING }}"

    deploy:
        name: Deploy to Azure
        runs-on: ubuntu-latest
        needs: [build-and-test, apply-migrations]

        steps:
            - name: Download artifact from build job
              uses: actions/download-artifact@v4
              with:
                name: webapp
                path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

            - name: Deploy
              uses: azure/webapps-deploy@v2
              with:
                app-name: ${{ env.AZURE_WEBAPP_NAME }}
                publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
                package: "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"
